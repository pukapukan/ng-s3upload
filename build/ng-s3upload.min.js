/*! ngs3upload 24-10-2014 */
!function(){angular.module("ngS3upload.config",[]).value("ngS3upload.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.services",[]).service("S3Uploader",["$http","$q","$window",function(a,b){this.uploads=0;var c=this;this.getUploadOptions=function(c,d){var e=b.defer();return a.get(c,{params:d}).success(function(a){e.resolve(a)}).error(function(a){e.reject(a)}),e.promise},this.createCORSRequest=function(a,b){var c;return c=new XMLHttpRequest,c.withCredentials?"undefined"!=typeof XDomainRequest?(c=new XDomainRequest,c.open(a,b)):c=null:c.open(a,b,!0),c},this.uploadFile=function(a,d,e,f){function g(b){a.$apply(function(){a.progress=b.lengthComputable?Math.round(100*b.loaded/b.total):"unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof k.notify&&k.notify(c)})}function h(b){var d=b.srcElement||b.target;a.$apply(function(){c.uploads--,a.uploading=!1,200===d.status?(a.success=!0,k.resolve(d),a.$emit("s3upload:success",d,{path:e})):(a.success=!1,k.reject(d),a.$emit("s3upload:error",d))})}function i(b){console.log("FAILED!",b);var d=b.srcElement||b.target;a.$apply(function(){c.uploads--,a.uploading=!1,a.success=!1,k.reject(d),a.$emit("s3upload:error",d)})}function j(b){var d=b.srcElement||b.target;a.$apply(function(){c.uploads--,a.uploading=!1,a.success=!1,k.reject(d),a.$emit("s3upload:abort",d)})}var k=b.defer();a.attempt=!0;var l=this.createCORSRequest("PUT",d);return l.upload.addEventListener("progress",g,!1),l.addEventListener("load",h,!1),l.addEventListener("error",i,!1),l.addEventListener("abort",j,!1),a.$emit("s3upload:start",l),a.uploading=!0,this.uploads++,l.send(f),k.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives",[]).directive("s3Upload",["$parse","S3Uploader",function(a,b){return{restrict:"AC",require:"?ngModel",templateUrl:"partials/shared/fileupload.html",replace:!0,transclude:!1,scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a){a.attempt=!1,a.success=!1,a.uploading=!1,a.barClass=function(){return{"bar-success":a.attempt&&!a.uploading&&a.success}}}],compile:function(){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,c,d,e){var f=angular.extend({},a.$eval(d.s3UploadOptions||d.options));f=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",acl:"public-read",uploadingKey:"uploading",folder:"",enableValidation:!0,targetFilename:null},f);var g=(a.$eval(d.bucket),angular.element(c.children()[0])),h=angular.element(c.find("input")[0]);g.bind("click",function(){h[0].click()}),e.$render=function(){a.filename=e.$viewValue};var i=function(){var c=h[0].files[0],d=c.name,g=(d.split(".").pop(),function(d){f.enableValidation&&e.$setValidity("uploading",!1);var g=d.signedUrl,h=d.publicUrl,i=function(){e.$setViewValue(h),a.filename=e.$viewValue,a.uploadedFiles.push(h),f.enableValidation&&(e.$setValidity("uploading",!0),e.$setValidity("succeeded",!0))},j=function(){a.filename=e.$viewValue,f.enableValidation&&(e.$setValidity("uploading",!0),e.$setValidity("succeeded",!1))};b.uploadFile(a,g,h,c).then(i,j)}),i=function(a){throw Error("Can't receive the needed options for S3 "+a)};b.getUploadOptions(f.getOptionsUri,{"content-type":c.type}).then(g,i)};c.bind("change",function(){f.submitOnChange&&a.$apply(function(){i()})}),angular.isDefined(d.doUpload)&&a.$watch(d.doUpload,function(a){a&&i()})}}}}}]),angular.module("ngS3upload").run(["$templateCache",function(a){"use strict";a.put("theme/bootstrap2.html",'<div class="upload-wrap">\n  <button class="btn btn-primary" type="button"><span ng-if="!filename">Choose file</span><span ng-if="filename">Replace file</span></button>\n  <a ng-href="{{ filename  }}" target="_blank" class="" ng-if="filename" > Stored file </a>\n  <div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px">\n    <div class="bar" style="width: {{ progress }}%;" ng-class="barClass()"></div>\n    </div>\n  <input type="file" style="display: none"/>\n</div>'),a.put("theme/bootstrap3.html",'<div class="upload-wrap">\n  <button class="btn btn-primary" type="button"><span ng-if="!filename">Choose file</span><span ng-if="filename">Replace file</span></button>\n  <a ng-href="{{ filename }}" target="_blank" class="" ng-if="filename" > Stored file </a>\n  <div class="progress">\n    <div class="progress-bar progress-bar-striped" ng-class="{active: uploading}" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: {{ progress }}%; margin-top: 10px" ng-class="barClass()">\n      <span class="sr-only">{{progress}}% Complete</span>\n    </div>\n  </div>\n  <input type="file" style="display: none"/>\n</div>')}])}(window,document);